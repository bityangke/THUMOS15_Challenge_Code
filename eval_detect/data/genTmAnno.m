function genTmAnno

    load('/home/yuanjun/Desktop/cvlibs/thumos15_valfeat/thumos15_validation_meta/thumos15_validation_meta.mat');
    meta = thumos15_validation_videos;
    
    anno_path = '/home/yuanjun/Desktop/cvlibs/thumos15_valfeat/TH15_Temporal_annotations_validation/annotations';
    addpath(anno_path);

    D = dir(anno_path);
    idx = false(length(D), 1);
    for i = 1:length(D)
        if strcmp(D(i).name, '.') || strcmp(D(i).name, '..')
            idx(i) = true;
        end
    end
    D(idx) = [];

    TM_ANO = cell(length(D), 1);
    for i = 1:length(D)

        TM_ANO{i} = importfile(D(i).name);
        
        for j = 1:size(TM_ANO{i}, 1)
            
            vidNm = TM_ANO{i}{j, 1};
            vidID = str2double(vidNm(end-3:end));
            frmRate = meta(vidID).frame_rate_FPS;
            
            TM_ANO{i}{j, 4} = frmRate;
            TM_ANO{i}{j, 5} = round(TM_ANO{i}{j, 2} * frmRate);
            TM_ANO{i}{j, 6} = round(TM_ANO{i}{j, 3} * frmRate);
            TM_ANO{i}{j, 7} = vidID;
            
            TM_ANO{i}{j, 8} = meta(vidID).primary_action;
            TM_ANO{i}{j, 9} = meta(vidID).primary_action_index;
            
        end

        disp(i/length(D));
    end

    catCell = cat(1, TM_ANO{:, 1});
    uniqVid = unique(catCell(:, 1));
    
    load frameCnt
    for i = 1:length(uniqVid)
        uniqVid{i, 2} = str2double(uniqVid{i}(end-3:end));
        uniqVid{i, 3} = frameCnt(uniqVid{i, 2});
    end    
    
    save TM_ANO TM_ANO uniqVid
    
end


function thumos15temporalvalidationAmbiguous = importfile(filename)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   THUMOS15TEMPORALVALIDATIONAMBIGUOUS = IMPORTFILE(FILENAME) Reads data
%   from text file FILENAME for the default selection.
%
%   THUMOS15TEMPORALVALIDATIONAMBIGUOUS = IMPORTFILE(FILENAME, STARTROW,
%   ENDROW) Reads data from rows STARTROW through ENDROW of text file
%   FILENAME.
%
% Example:
%   thumos15temporalvalidationAmbiguous =
%   importfile('thumos15_temporalvalidation_Ambiguous.txt', 1, 188);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2015/05/01 16:03:08

%% Initialize variables.
delimiter = ' ';
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
dataArray([2, 3]) = cellfun(@(x) num2cell(x), dataArray([2, 3]), 'UniformOutput', false);
thumos15temporalvalidationAmbiguous = [dataArray{1:end-1}];

end







